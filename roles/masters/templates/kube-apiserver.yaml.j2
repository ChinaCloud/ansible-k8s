apiVersion: v1
kind: Pod
metadata:
  name: kube-apiserver
  namespace: kube-system
  labels:
    name: kube-apiserver
spec:
  hostNetwork: true
  containers:
  - name: kube-apiserver
    image: {{ registry_host }}{% if registry_port != 80 %}:{{ registry_port }}{% endif %}/mir/hyperkube:v1.3.7
    command:
    - /hyperkube
    - apiserver
    - --bind-address=0.0.0.0
    - --secure-port=443
    - --insecure-bind-address=0.0.0.0
    - --insecure-port=8080
    - --allow-privileged=true
    - --service-cluster-ip-range={{ service_ip_range }}
    - --advertise-address={{ ansible_default_ipv4.address }}
    - --cors-allowed-origins=.*
    - --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,ResourceQuota
    - --tls-cert-file=/etc/kubernetes/ssl/apiserver.pem
    - --tls-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem
    - --client-ca-file=/etc/kubernetes/ssl/ca.pem
    - --service-account-key-file=/etc/kubernetes/ssl/apiserver-key.pem
    - --v={{ log_level }}
    - --etcd-servers={% for host in groups['etcd'] %}http://{{ hostvars[host]['ansible_default_ipv4']['address']}}:2379{% if not loop.last %},{% endif %}{% endfor %}

    ports:
    - containerPort: 443
      hostPort: 443
      name: https
    - containerPort: 8080
      hostPort: 8080
      name: local
    volumeMounts:
    - mountPath: /etc/kubernetes/ssl
      name: ssl-certs-kubernetes
      readOnly: true
    - mountPath: /etc/ssl/certs
      name: ssl-certs-host
      readOnly: true
  volumes:
  - hostPath:
      path: /etc/kubernetes/ssl
    name: ssl-certs-kubernetes
  - hostPath:
      path: /usr/share/ca-certificates
    name: ssl-certs-host
